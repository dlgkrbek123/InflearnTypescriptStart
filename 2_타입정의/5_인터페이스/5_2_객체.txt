------------------------------------------------------------

객체의 타입을 정의

interface Person {
  name: string;
  age?: number;
}

const p1: Person = { name: 'mike', age: 23 };

------------------------------------------------------------

객체 readonly

interface Person {
  readonly name: string;
  age?: number;
}

const p1: Person = {
  name: "mike"
}
p1.name = 'jone'; // readonly속성을 수정하려 하여 에러

------------------------------------------------------------

- 보통 객체가 인터페이스에 정의되지 않은 속성을 가지고 있어도 할당가능

interface Person {
  readonly name: string;
  age?: number;
}

const p2 = {
  name: "mike",
  birthday: "1997-01-01", // birthday는 Person에 정의되어 있지 않지만 할당가능
}
const p3: Person = p2;

const p1: Person = {
  name: "mike",
  birthday: "1997-01-01"  
}
// 리터럴로 값을 할당시 인터페이스에 없는 속성있다면 에러 발생

------------------------------------------------------------

index type
- 인터페이스에서 속성이름을 구체적으로 정의하지 않고
  값의 타입만 정의

interface Person {
  readonly name: string;
  age: number;
  [key: string]: string | number;
}

const p1: Person = {
  name: "mike",
  age: "25",
  birthday: "1997-01-01",
};

------------------------------------------------------------