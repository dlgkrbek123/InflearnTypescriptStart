------------------------------------------------------------

// 기본 number, string, boolean 타입
const size: number = 123
const isBig: boolean = size >= 100
const msg : string = isBig ? "크다" : "작다"


// 숫자의 배열을 정의
const values: number[] = [1, 2, 3]
const values2 : Array<number> = [1, 2, 3]
values.push("a"); // 숫자의 배열에 문자열을 삽입하려 하므로 에러


// 튜플 타입 정의
// 배열 인덱스별로 타입 정의
const data:[string, number] = [msg, size] 
data[0].substr(1) // String.substr메서드를 호출하므로 문제 x
data[1].substr(1) // number는 substr 메서드를 미지원하므로 에러


// js의 타입으로 확인
console.log(typeof 123) // number
console.log(typeof 'abc') // string
console.log(typeof [1, 2, 3]) // js에서 Array는 따로 존재하지 않아 object

// 풍부하게 타입을 정의 가능하다!

------------------------------------------------------------

let v1: undefined = undefined
let v2: null = null
v1 = 123; // undefined타입 변수에 number를 할당하므로 에러

let v3: number | undefined = undefined
v3 = 123; // 유니온을 이용하여 number와 undefined 둘다 담을 수 있는 변수

------------------------------------------------------------

- 리터럴을 타입으로 정의 가능

let v1: 10 | 20 | 30; // 10,20,30만 할당가능
v1 = 10;
v1 = 15; // 에러


let v2: "경찰관" | "소방관";
v2 = "의사"; // 에러

------------------------------------------------------------

- any는 모든 값을 포함하는 타입
 
let value: any;

value = 123; 
value = 123;
value = 123;

- js코드로 작성된 프로젝트를 ts로 포팅할 때 유용
- 모든 파일의 타입을 모두 정의하기 힘드니까 임시로 any로 정의


- 타입을 모르거나 정의가 안되있다면 사용하자
- 남발하면 ts의 의미가 퇴색된다.

------------------------------------------------------------

- 함수의 리턴타입으로 void, never를 사용가능

function f1(): void {
  console.log('hello')
}
- 리턴이 없이 종료되는 함수

function f2(): never {
  throw new Error("some error")    
}
- 종료되지 않거나 비정상적으로 종료되는 함수에 설정
- 사용빈도 x

------------------------------------------------------------

- 객체는 object타입으로 설정

let v: object;
v = { name: "abc" };
console.log(v.prop1); // 속성정보가 없으므로 에러


- 모든 객체를 할당가능 => 객체의 속성정보가 없으므로 속성에 접근하려 하면에러남
- 인터페이스를 통해 객체 속성정보를 제공해야함

------------------------------------------------------------

- union과 intersection을 이용하여 합집합/교집합을 표현

let v1: (1 | 3 | 5) & (3 | 5 | 7); // 3과 5만 할당가능
v1 = 3;
v1 = 1; // 에러!

------------------------------------------------------------

- type키워드로 타입에 별칭을 지정

type Width = number | string; // number와 string을 할당가능한 type을 정의
let width: Width;

width = 100;
width = '100px'

------------------------------------------------------------